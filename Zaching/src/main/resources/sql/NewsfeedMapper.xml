<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="NewsfeedMapper">
	
	
	<resultMap id="NewsfeedSelectMap" type="Newsfeed">
		<result property="newsfeedId" column="newsfeed_id" jdbcType="INTEGER" />
		<result property="categoryCode" column="category_code" jdbcType="CHAR"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="locationName" column="location_name" jdbcType="VARCHAR"/>	
		<result property="fileName" column="upload_file" jdbcType="VARCHAR"/>		
		<result property="locationY" column="latitude" jdbcType="INTEGER"/>
		<result property="locationX" column="longitude" jdbcType="INTEGER"/>
		<result property="regDate" column="created_date" jdbcType="DATE"/>
		<result property="userId" column="user_id" jdbcType="INTEGER"/>
		<result property="countLikey" column="total_like" jdbcType="INTEGER"/>
		<result property="countReply" column="total_reply" jdbcType="INTEGER"/>
		<result property="privacyBound" column="privacy_bound" jdbcType="CHAR"/>
		<result property="status" column="status" jdbcType="CHAR"/>
		<result property="userName" column="name" jdbcType="VARCHAR"/>
		<result property="profileImage" column="profile_image" jdbcType="VARCHAR"/>
		<result property="likeUser" column="like_user" jdbcType="VARCHAR"/>
		
	</resultMap>
	
	<insert id="addNewsfeed" parameterType="newsfeed">
		INSERT 
		INTO newsfeed(newsfeed_id, category_code, content, location_name, longitude, latitude, upload_file, created_date, status, privacy_bound, total_like, user_id, total_reply)
		VALUES (seq_newsfeed_id.nextval, #{categoryCode}, #{content:VARCHAR}, #{locationName:VARCHAR}, #{locationX:INTEGER}, #{locationY:VARCHAR}, #{fileName:VARCHAR}, SYSDATE,
				#{status:CHAR}, #{privacyBound}, 0, #{userId}, 0)
				<selectKey keyProperty="newsfeedid" resultType="Integer" order="AFTER"> 
			SELECT seq_newsfeed_id.currval FROM dual
		</selectKey>
	</insert>
	
	<delete id="deleteNewsfeed" parameterType="int">
		DELETE
		FROM newsfeed
		WHERE newsfeed_id = #{value}
	</delete>
	<update id="updateNewsfeed" parameterType="newsfeed">
		UPDATE newsfeed
		SET category_code=#{categoryCode}, content=#{content}, location_name=#{locationName}, longitude=#{locationX}, latitude=#{locationY}, upload_file=#{fileName},
				privacy_bound=#{privacyBound}
		WHERE newsfeed_id = #{newsfeed_id}
	</update>
	
	<select id="getNewsfeed" parameterType="int" resultMap="NewsfeedSelectMap">
		SELECT newsfeed_id, category_code, content, location_name, longitude, latitude, upload_file, created_date, status, privacy_bound, total_like, user_id, total_reply
		FROM newsfeed
		WHERE newsfeed_id=#{value}
	</select>
	
	<select id="getNewsfeedList" parameterType="search" resultMap="NewsfeedSelectMap">
		SELECT *
		FROM( SELECT inner_table.*, ROWNUM AS row_seq
				FROM( <include refid="listNewsfeedSql" /> ) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getTotalCount" parameterType="search" resultType="int">
		SELECT COUNT(*)
	  	FROM( <include refid="listNewsfeedSql" /> ) countTable		
	</select>
	
	<sql id="listNewsfeedSql">
		SELECT n.*, u.name, u.profile_image, v.user_id AS like_user
		FROM newsfeed n, users u, (SELECT newsfeed_id, user_id from like_blind where user_id=#{category:VARCHAR}) v
	  			
	  			<where>
	  			n.user_id=u.user_id(+) 
	  			AND v.newsfeed_id(+)=n.newsfeed_id
				<if test="searchCondition != 'N06'">
			 			AND category_code LIKE '${searchCondition}%'
				</if>
				</where>
				ORDER BY n.newsfeed_id desc
	</sql>
	
	<select id="getCountLike" parameterType="int" resultType="int">
		SELECT total_like
		FROM newsfeed
		WHERE newsfeed_id=#{value}
	</select>
	
	<select id="getCountReply" parameterType="int" resultType="int">
		SELECT total_reply
		FROM newsfeed
		WHERE newsfeed_id=#{value}
	</select>
	
	<update id="updateCountLike" parameterType="int">
		
		UPDATE newsfeed
		SET total_like = total_like+1
		WHERE newsfeed_id=#{value}
		
	</update>
	
	<update id="updateCountReply" parameterType="int">
		UPDATE newsfeed
		SET total_reply = total_reply+1
		WHERE newsfeed_id=#{value}
	</update>
	
	<update id="cancelCountLike" parameterType="int">
		UPDATE newsfeed
		SET total_like = total_like-1
		WHERE newsfeed_id=#{value}
	</update>
	
	<insert id="addLikeBlind" parameterType="java.util.Map">
		INSERT 
		INTO like_blind(like_blind_id, newsfeed_id, user_id, status)
		VALUES(seq_like_blind_id.nextval, #{newsfeedId}, #{userId}, #{status}) 
	</insert>
	
	<delete id="deleteLikeBlind" parameterType="java.util.Map">
		DELETE
		FROM like_blind
		WHERE user_id=#{userId} AND trim(status)=#{status} AND newsfeed_id=#{newsfeedId}
	</delete>
	
	<select id="getLikeUser" parameterType="java.util.Map" resultType="INTEGER">
		SELECT count(*)
		FROM like_blind 
		WHERE newsfeed_id=#{newsfeedId} AND trim(status)=#{status} AND user_id=#{userId}
	</select>
	
	<select id="timeline" parameterType="int" resultMap="NewsfeedSelectMap">
		SELECT n.*, u.name, u.profile_image
		FROM newsfeed n, users u
		WHERE n.user_id=u.user_id(+) AND u.user_id=#{value}
	</select>

	<select id="listMemoryMap"
			parameterType="int"
			resultMap="NewsfeedSelectMap">
		SELECT *
		FROM newsfeed
		<where>
			user_id = #{userId}
			AND length(latitude) > 3
			AND length(longitude) > 3
		</where>
	</select>
	
	<select id="friendNewsfeed" parameterType="int" resultMap="NewsfeedSelectMap">
		SELECT * 
		FROM newsfeed 
		WHERE user_id IN (SELECT user_id FROM friend WHERE status=0 AND user_id IN (SELECT friend_id FROM friend WHERE user_id=#{value} AND status=0) AND friend_id=#{value} AND status=0)
	</select>

</mapper>