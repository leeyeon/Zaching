<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BobMapper">
	
	<resultMap id="bobSelectMap"
			   type="bob" >
		<result property="bobId" column="bob_id" jdbcType="INTEGER" />
		<result property="writtenUserId" column="writer_id" jdbcType="INTEGER"/>
		<result property="writtenUserName" column="user_name" jdbcType="VARCHAR"/>
		<result property="writtenUserProfile" column="profile_image" jdbcType="VARCHAR"/>
		<result property="category" column="category_code" jdbcType="CHAR"/>
		<result property="title" column="title" jdbcType="VARCHAR"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="image" column="background_image" jdbcType="VARCHAR"/>
		<result property="limitNum" column="limit_num" jdbcType="INTEGER"/>
		<result property="locationName" column="location_name" jdbcType="VARCHAR"/>
		<result property="latitude" column="latitude" jdbcType="DOUBLE"/>
		<result property="longitude" column="longitude" jdbcType="DOUBLE"/>
		<result property="AppointmentTime" column="time" jdbcType="DATE"/>
		<result property="fee" column="fee" jdbcType="INTEGER"/>
		<result property="feeDate" column="fee_date" jdbcType="DATE"/>
		<result property="status" column="status" jdbcType="CHAR"/>
		<result property="createdDate" column="created_date" jdbcType="DATE"/>
	</resultMap>
	
	<resultMap id="participantSelectMap"
			   type="participant">
		<result property="participantId" column="participant_id" jdbcType="INTEGER" />
		<result property="userId" column="user_id" jdbcType="INTEGER"/>
		<result property="participantName" column="user_name" jdbcType="VARCHAR"/>
		<result property="participantProfile" column="profile_image" jdbcType="VARCHAR"/>
		<result property="participatedDate" column="participated_date" jdbcType="DATE"/>
		<result property="isAutoFee" column="setting_fee" jdbcType="CHAR"/>
		<result property="status" column="status" jdbcType="CHAR"/>
	</resultMap>
	
	<insert id="addBob" 
			parameterType="bob">
		INSERT
		INTO bob(bob_id, category_code, title, content, created_date, status, writer_id,
				background_image, location_name, latitude, longitude, time, limit_num, fee, fee_date)
		VALUES (
			seq_bob_id.nextval, 
			#{category:CHAR}, 
			#{title:VARCHAR}, 
			#{content:VARCHAR}, 
			SYSDATE,
			 'Y',
			#{writtenUserId:INTEGER},
			#{image:VARCHAR}, 
			#{locationName:VARCHAR}, 
			#{latitude:LONGVARCHAR}, 
			#{longitude:LONGVARCHAR},
			#{AppointmentTime:DATE}, 
			#{limitNum:INTEGER}, 
			#{fee:INTEGER}, 
			#{feeDate:DATE}
			)
			
		<selectKey keyProperty="bobId" resultType="Integer" order="AFTER"> 
			SELECT seq_bob_id.currval FROM dual
		</selectKey>

	</insert>
	
	<select id="getBob" 
			parameterType="map" 
			resultMap="bobSelectMap">
		SELECT
			bob_id, title, content, bob.created_date AS created_date, background_image,
			users.profile_image AS profile_image, users.name AS user_name, writer_id, limit_num,
			
		<if test="category == 'B01' || category == 'B02'">
			location_name, bob.latitude AS latitude, bob.longitude AS longitude
		</if>
		<if test="category == 'B03'">
			fee, fee_date
		</if>
			FROM BOB, USERS
		<where>
			bob.writer_id = users.user_id
			AND bob_id = #{bobId}
		</where>	
	</select>
	
	<update id="updateBob"
			parameterType="bob">
		UPDATE BOB
		<set>
			title = #{title},
			content = #{content:VARCHAR},
			background_image = #{image:VARCHAR},
			<if test='category == "B01" || category == "B02"'>
				location_name = #{locationName: VARCHAR},
				latitude = #{latitude: LONGVARCHAR},
				longitude = #{longitude: LONGVARCHAR}
			</if>
			<if test='category == "B03"'>
				fee = #{fee: INTEGER},
				fee_date = #{feeDate: DATE}
			</if>
		</set>
		<where>
			bob_id = #{bobId}
		</where>
	</update>
	
	<update id="deleteBob">
		UPDATE BOB
		<set>
			status = 'N'
		</set>
		<where>
			bob_id = #{bobId}
		</where>
	</update>
	
	<select id="listBob" 
			parameterType="search"
			resultMap="bobSelectMap">
			
		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
				FROM	( <include refid="selectBobSql" /> ) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
			
	</select>
	
	<select id="getTotalCount"
			parameterType="search"
			resultType="int">
		SELECT COUNT(*)
		FROM ( <include refid="selectBobSql" /> ) countTable
	</select>
	
	<sql id="selectBobSql">
		SELECT
			bob.bob_id AS bob_id, title, content, background_image,
			users.profile_image AS profile_image, writer_id, users.name AS user_name,
					
		<if test='category == "B01" || category == "B02"'>
			limit_num, bob.location_name AS location_name, bob.longitude AS longitude, 
			bob.latitude AS latitude, bob.time AS time
		</if>
		
		FROM BOB, PARTICIPANT, USERS
		<where>
			bob.bob_id = participant.bob_id
			AND participant.user_id = users.user_id
		</where>
		ORDER BY bob.created_date
	</sql>
	
	<sql id="selectParticipantSql">
		SELECT participant_id, users.user_id AS user_id,
				users.profile_image AS profile_image, users.name AS user_name
		FROM PARTICIPANT, USERS
		<where>
			participant.user_id = users.user_id
			AND participant.status = 0
			AND participant.bob_id = #{bobId}
		</where>
	</sql>
	
	
	<!-- 참가자 관련 QUERY -->
	
	<insert id="enterBob"
			parameterType="map">
		INSERT
		INTO PARTICIPANT(participant_id, participated_date, status, bob_id, user_id)
		VALUES (seq_participant_id.nextval, SYSDATE, '0', #{bobId}, #{userId})
	</insert>
	
	<select id="getParticipant"
			parameterType="map"
			resultType="int">
		SELECT
			participant_id
		FROM PARTICIPANT
		<where>
			user_id = #{userId}
			AND bob_id = #{bobId}
		</where>
	</select>
	
	<delete id="cancleParticipant"
			parameterType="int">
		DELETE
		FROM PARTICIPANT
		WHERE participant_id = #{value}
	</delete>
	
	<update id="setFeeBob"
			parameterType="map">
		UPDATE PARTICIPANT
		<set>
			setting_fee = #{settingFee}
		</set>
		<where>
			PARTICIPANT_ID = #{participantId}
		</where>
	</update>
	
	<insert id="payFeeBob"
			parameterType="map">
		INSERT
		INTO FEE(fee_id, paid_date, paid_fee, participant_id)
		VALUES(seq_fee_id.nextval, SYSDATE, #{paidFee}, #{participantId})
	</insert>
	
	<select id="getPayDate">
		SELECT
	</select>

</mapper>