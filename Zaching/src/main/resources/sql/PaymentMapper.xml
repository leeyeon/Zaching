<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PaymentMapper">
	
	<resultMap id="paymentSelectMap"
			   type="payment" >
		<result property="paymentId" column="payment_id" jdbcType="INTEGER"/>
		<result property="createdDate" column="time" jdbcType="DATE" />		
		<result property="userId" column="user_id" jdbcType="INTEGER"/>
		<result property="receiverId" column="receiver_id" jdbcType="INTEGER"/>
		<result property="point" column="money" jdbcType="INTEGER"/>
		<result property="realName" column="real_name" jdbcType="VARCHAR"/>
		<result property="bankCode" column="back_code" jdbcType="INTEGER"/>
		<result property="accountNumber" column="account_number" jdbcType="VARCHAR"/>
		<result property="accountCi" column="account_ci" jdbcType="INTEGER"/>
		<result property="accountSeqNo" column="account_seq_no" jdbcType="INTEGER"/>
		<result property="paymentCode" column="payment_code" jdbcType="VARCHAR"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="managepayment"
			parameterType="map">
		INSERT
		INTO PAYMENT (payment_id, time, payment_code, money, user_id, content)
		VALUES (seq_payment_id.nextval,
				SYSDATE,
				#{paymentCode},
				#{point},
				#{userId},
				#{content:VARCHAR})
	</insert>
	
	<update id="updateUserPayment"
			parameterType="payment">
		UPDATE USERS
		<set>
			<if test="paymentCode == 'P01' || paymentCode == 'P05' || paymentCode == 'P06'">
				total_point = total_point + #{point}
			</if>
			<if test="paymentCode == 'P02' || paymentCode == 'P03'">
				total_point = total_point - #{point}
			</if>
			<if test="paymentCode == 'M01' || paymentCode == 'M03'">
				total_mileage = total_mileage + #{point}
			</if>
			<if test="paymentCode == 'M02'">
				total_mileage = total_mileage - #{point}
			</if>
		</set>
		<where>
			user_id = #{userId}
		</where>
	</update>
	
	<update id="presentUserPayment">
		UPDATE USERS
		<set>
				total_point = total_point + #{point}
		</set>
		<where>
			user_id = #{receiverId}
		</where>
	</update>
	
	<update id="exchargePoint"
			parameterType="payment">
		UPDATE PAYMENT
		<set>
			payment_code = 'P04'
		</set>
		<where>
			payment_id = #{paymentId}
		</where>
	</update>
	
	<insert id="presentPoint">
	
	</insert>
	
	<select id="listPoint" 
			parameterType="map"
			resultMap="paymentSelectMap">

		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
				FROM	( <include refid="selectPaymentSql" /> ) inner_table
				WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
			
	</select>
	
	<select id="getTotalCount"
			parameterType="search"
			resultType="int">
		SELECT COUNT(*)
		FROM ( <include refid="selectPaymentSql" /> ) countTable
	</select>
	
	<sql id="selectPaymentSql">
		SELECT
			payment_id, to_char(time, 'yyyy-mm-dd HH24:mi') AS time, money, trim(payment_code) AS payment_code,
			content
		FROM PAYMENT
		<where>
			user_id = #{userId}
			AND substr(payment_code,0,1) = 'P'
			<if test="search.searchCondition != null and search.searchCondition != ''">
				<if test="search.searchCondition eq 0">
					AND time <![CDATA[>=]]> SYSDATE-7
				</if>
				<if test="search.searchCondition eq 1">
					AND time <![CDATA[>=]]> add_months(SYSDATE,-1)
				</if>
				<if test="search.searchCondition eq 2">
					AND time <![CDATA[>=]]> add_months(SYSDATE,-6)
				</if>
			</if>
			<if test="search.searchCondition == null or search.searchCondition == ''">
				AND time BETWEEN TRUNC (SYSDATE, 'MM') + 1/24 AND LAST_DAY (TRUNC (SYSDATE)) + 1 / 24
			</if>
		</where>
		ORDER BY time DESC
	</sql>
	
	<select id="getPayment"
			parameterType="map"
			resultType="int">
		SELECT
			<if test="point != null">
				total_point
			</if>
			<if test="point == null">
				total_mileage
			</if>
		FROM USERS
		<where>
			user_id = #{userId}
		</where>
	</select>
	
	<select id="listExchargePoint" 
			parameterType="search"
			resultMap="paymentSelectMap">

		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
				FROM	( 
					SELECT
						payment_id, to_char(time, 'yyyy-mm-dd HH24:mi') AS time, 
						money, trim(payment_code) AS payment_code, users.bank_code, users.account_number,
						users.real_name, payment.money AS point
					FROM PAYMENT, USERS
					<where>
						PAYMENT.user_id = USERS.user_id
						AND payment_code IN ('P03', 'P04')
					</where>
					ORDER BY payment_code
				 ) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
			
	</select>

</mapper>